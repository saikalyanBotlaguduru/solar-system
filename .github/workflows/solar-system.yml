name: solar system work flow

on:
  workflow_dispatch: 
  push:
    branches:
      - main
      - 'feature/*'
env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{vars.MONGO_USERNAME}}
  MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}}
jobs:
  unit-testing:
      name: unit testing
      strategy:
        matrix:
          nodejs_version: [19,20]
          operating_system: [ubuntu-latest,macos-latest]
          exclude:
            - nodejs_version: 19
              operating_system: macos_latest
      runs-on: ${{ matrix.operating_system }}
      steps:
      - name: check out repo
        uses: actions/checkout@v4
      - name: set up node js version - ${{ matrix.nodejs_version }}
        uses:  actions/setup-node@v3
        with:
          node-version: ${{matrix.nodejs_version}}
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json')}}


      - name: install dependencies
        run: npm install
      - name: Check Code Coverage
        continue-on-error: true
        run: npm run coverage
        
      
      - name: unit testing
        id:  node-js-unit-test-stp 
        run: npm test

     
  code-coverage:
        name: unit testing
        strategy:
          matrix:
            nodejs_version: [19,20]
            operating_system: [ubuntu-latest]
            exclude:
              - nodejs_version: 19
                operating_system: macos_latest
        runs-on: ${{ matrix.operating_system }}
        steps:
        - name: check out repo
          uses: actions/checkout@v4
        - name: set up node js version - ${{ matrix.nodejs_version }}
          uses:  actions/setup-node@v3
          with:
            node-version: ${{matrix.nodejs_version}}
        - name: Cache npm dependencies
          uses: actions/cache@v3
          with:
            path: ~/.npm
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json')}}


        - name: install dependencies
          run: npm install
        - name: Check Code Coverage
          continue-on-error: true
          run: npm run coverage
          
        - name: Upload coverage report
          uses: actions/upload-artifact@v4
          with:
            
            name: Code-Coverage-Result-${{ matrix.nodejs_version }}-${{ matrix.operating_system }}

            path: coverage
            retention-days: 2

        - name: unit testing
          id:  node-js-unit-test-stp 
          run: npm test

        - name: Archive Test Result
          if: always()
          #if: steps.node-js-unit-test-stp.outcome == 'failure' || steps.node-js-unit-test-stp.outcome == 'success'
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-TestResult-${{ matrix.operating_system }}${{ strategy.job-index }}
            path: test-results.xml

  docker:
    name: containerization
    needs: [code-coverage,unit-testing]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: DockerHub Login
        uses: docker/login-action@v3
        with:
          username: ${{vars.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOKCERHUB_PASSWORD}}
      -  name: Build and push
         uses: docker/build-push-action@v6
         with:
           context: .
           push: false
           tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
      - name: Docker Image testing
        run: |
            # List all Docker images
            docker images

            # Run the Docker container
            docker run --name solar-system-app -d \
              -p 3000:3000 \
              -e MONGO_URI=$MONGO_URI \
              -e MONGO_USERNAME=$MONGO_USERNAME \
              -e MONGO_PASSWORD=$MONGO_PASSWORD \
              ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
      - name: echo Testing Image URL using wget
        run:  wget -q -O - 127.0.0.1:3000/live | grep live


